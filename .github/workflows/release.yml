name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            build-name: Linux
            artifact-extension: .tar.gz
            config-command: cmake -DCMAKE_BUILD_TYPE=Release -DAPPEND_VERSION_USE_GIT=OFF .
            archive-command: tar -czvf
            shell: bash
          - os: windows-latest
            build-name: Windows
            artifact-extension: .zip
            config-command: cmake -DCMAKE_C_COMPILER=/clang64/bin/clang -DCMAKE_CXX_COMPILER=/clang64/bin/clang++ -DCMAKE_SYSTEM_NAME=Windows -DCMAKE_BUILD_TYPE=Release -DAPPEND_VERSION_USE_GIT=OFF -G Ninja .
            archive-command: zip -r
            shell: msys2 {0}

    defaults:
      run:
        shell: ${{ matrix.shell }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup CMake (Linux)
        if: runner.os == 'Linux'
        uses: lukka/get-cmake@latest

      - name: Setup Clang (Linux)
        if: runner.os == 'Linux'
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "18"

      - name: Setup msys and install required packages
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          msystem: clang64
          install: mingw-w64-clang-x86_64-toolchain ninja cmake zip

      - name: Create build directory
        run: mkdir build

      - name: Change to build directory
        run: cd build

      - name: Configure CMake (Linux)
        if: runner.os == 'Linux'
        run: ${{ matrix.config-command }}

      - name: Configure CMake (Windows)
        if: runner.os == 'Windows'
        run: ${{ matrix.config-command }}

      - name: Build
        run: cmake --build .

      - name: Archive Artifacts
        run: |
          executable_name=$(echo Zagreus-v* | sed 's/\.exe$//')
          echo "EXECUTABLE_NAME=$executable_name" >> $GITHUB_ENV
          mkdir rel
          cp "$executable_name" rel/
          cp LICENSE README.md rel/
          cd rel
          ${{ matrix.archive-command }} "../$executable_name${{ matrix.artifact-extension }}" *

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.build-name }}
          path: "${{ env.EXECUTABLE_NAME }}${{ matrix.artifact-extension }}"

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          generate_release_notes: true
          files: |
            artifacts/Windows/*
            artifacts/Linux/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
